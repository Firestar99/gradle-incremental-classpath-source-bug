import org.gradle.work.ChangeType
import org.gradle.work.FileChange
import org.gradle.work.InputChanges

allprojects {
    apply plugin: 'java'

    group 'org.example'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }
}



// ----- Important stuff -----

allprojects {
    sourceSets.all { SourceSet set ->
        Task fail = tasks.create(set.getTaskName("fail", ""), Fail, {
            getSource().from(set.output)
            getOutput().set(project.layout.buildDirectory.file("addedAndRemoved/${set.name}"))
        })
        assemble.dependsOn(fail)
    }
}

abstract class Fail extends DefaultTask {

    @InputFiles
    @Classpath
//	@PathSensitive(PathSensitivity.RELATIVE)
    @SkipWhenEmpty
    abstract ConfigurableFileCollection getSource();

    @OutputFile
    abstract RegularFileProperty getOutput();

    @TaskAction
    void work(InputChanges inputChanges) {
        String out;
        if (!inputChanges.incremental)
            out = "non-incremental execution, try again!"
        else {
            Set<FileChange> changes = inputChanges.getFileChanges(getSource()).toSet()
            Set<FileChange> addedAndRemoved = changes.findAll { added -> added.changeType == ChangeType.ADDED && changes.find { removed -> removed.changeType == ChangeType.REMOVED && removed.normalizedPath == added.normalizedPath } }
            out = "changes added and removed: \n\t${addedAndRemoved.collect { it.normalizedPath }.join("\n\t")}"
        }
        logger.log(LogLevel.WARN, out);
        getOutput().get().asFile.write(out);
    }

}